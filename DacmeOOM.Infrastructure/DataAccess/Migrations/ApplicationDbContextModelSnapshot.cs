// <auto-generated />
using System;
using DacmeOOM.Infrastructure.EFCore.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DacmeOOM.Infrastructure.EFCore.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.EmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TermDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.EmployeeRoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int");

                    b.Property<int>("OrgModelId")
                        .HasColumnType("int");

                    b.Property<int>("OrgUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrgId");

                    b.HasIndex("OrgUnitId");

                    b.ToTable("EmployeeRoles");
                });

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.OrgLevelModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrgTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrgTypeId");

                    b.ToTable("OrgLevels");
                });

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.OrgTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrgTypes");
                });

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.OrgUnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int");

                    b.Property<int>("OrgModelId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrgId");

                    b.ToTable("OrgUnits");
                });

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.EmployeeModel", b =>
                {
                    b.HasOne("DacmeOOM.Core.Domain.Models.EmployeeRoleModel", "Role")
                        .WithOne("Employee")
                        .HasForeignKey("DacmeOOM.Core.Domain.Models.EmployeeModel", "RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.EmployeeRoleModel", b =>
                {
                    b.HasOne("DacmeOOM.Core.Domain.Models.OrgLevelModel", "Org")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("OrgId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DacmeOOM.Core.Domain.Models.OrgUnitModel", "OrgUnit")
                        .WithMany("Roles")
                        .HasForeignKey("OrgUnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Org");

                    b.Navigation("OrgUnit");
                });

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.OrgLevelModel", b =>
                {
                    b.HasOne("DacmeOOM.Core.Domain.Models.OrgTypeModel", "OrgType")
                        .WithMany("OrgLevels")
                        .HasForeignKey("OrgTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrgType");
                });

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.OrgUnitModel", b =>
                {
                    b.HasOne("DacmeOOM.Core.Domain.Models.OrgLevelModel", "Org")
                        .WithMany("OrgUnits")
                        .HasForeignKey("OrgId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Org");
                });

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.EmployeeRoleModel", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.OrgLevelModel", b =>
                {
                    b.Navigation("EmployeeRoles");

                    b.Navigation("OrgUnits");
                });

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.OrgTypeModel", b =>
                {
                    b.Navigation("OrgLevels");
                });

            modelBuilder.Entity("DacmeOOM.Core.Domain.Models.OrgUnitModel", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
